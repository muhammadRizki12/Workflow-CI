name: CI
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  CSV_URL: "MLproject/obesity_data_preprocessing.csv"

jobs:
  build:
    runs-on: ubuntu-latest
  
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
 
      # Setup Python 3.12.7
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
      
      # Check Env Variables
      - name: Check Env
        run: |
          echo $CSV_URL
 
      # Install mlflow
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow==2.19.0 numpy pandas matplotlib scikit-learn seaborn
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      # Run as a mlflow project
      - name: Run mlflow project
        run: mlflow run MLProject --env-manager=local

      - name: Upload MLflow Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: ./mlruns

        # Push mlruns back to repository
      - name: Push mlruns to repository
        run: |
          git config --global user.name "${{ secrets.USERNAME }}"
          git config --global user.email "${{ secrets.EMAIL }}"
          git add mlruns/
          git commit -m "Save mlruns from CI run"
          git push origin main

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image using MLflow
        run: |
          MODEL_URI=$(ls -td mlruns/0/* | head -1)/artifacts/model
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/mlflow-model:latest
          mlflow models build-docker -m $MODEL_URI -n $IMAGE_NAME

      - name: Push Docker Image to Docker Hub
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/mlflow-model:latest
          docker push $IMAGE_NAME
